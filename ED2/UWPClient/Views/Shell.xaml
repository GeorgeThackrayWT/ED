<Page x:Class="WT.UWP.ED2.Views.Shell"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d"
   
      xmlns:views="using:WT.UWP.ED2.Views"
      xmlns:system="using:System"
      xmlns:helpers="using:EDCORE.Helpers"
      Background="{StaticResource PageBackgroundBrush}">


    <Page.Resources>

        <!--<Style x:Key="MenuListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <ListViewItemPresenter SelectedBackground="{StaticResource TenPercentLighterBrush}"
                                               SelectedPointerOverBackground="{StaticResource TenPercentLighterBrush}"
                                               PointerOverBackground="{StaticResource TenPercentDarkerBrush}"
                                               ContentTransitions="{TemplateBinding ContentTransitions}"
                                               HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                               ContentMargin="{TemplateBinding Padding}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
     
        <DataTemplate x:Key="TopItemTemplate" x:DataType="helpers:MenuItem" >
            <StackPanel Orientation="Horizontal" Margin="0">
                <TextBlock Text="{x:Bind Text}" FontSize="23"/>
            </StackPanel>
        </DataTemplate>

        <DataTemplate x:Key="ItemTemplate" x:DataType="helpers:MenuItem">
            <Grid VerticalAlignment="Top" >
                <GridView x:Name="itemGV" ItemsSource="{x:Bind Path = SubMenu}" SelectionChanged="itemGV_SelectionChanged">
                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="helpers:MenuItem">
                            <StackPanel Orientation="Horizontal" Margin="0">
                                <TextBlock Text="{x:Bind Text}" FontSize="23" Tapped="TextBlock_Tapped" SelectionChanged="TextBlock_SelectionChanged" />
                            </StackPanel>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </Grid>
        </DataTemplate>


    </Page.Resources>

    <Grid x:Name="container" Background="{StaticResource SplitViewBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="12*" />
            <RowDefinition Height="80*" />
            <RowDefinition Height="8*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40" />
            <ColumnDefinition Width="40*" />
        </Grid.ColumnDefinitions>



        <!-- SplitView -->
        <SplitView x:Name="MySplitView"
                   IsPaneOpen="False"
                   CompactPaneLength="48"
                   OpenPaneLength="250"
                   PaneBackground="{StaticResource SplitViewBackgroundBrush}"
                   DisplayMode= "Overlay"
                   Grid.Row="1"
                   Grid.ColumnSpan="2">
            <SplitView.Pane>
                <views:ManagementUnits  Margin="0 0 0 0" Grid.Row="0"/>
            </SplitView.Pane>
            
            <SplitView.Content>

                <Frame x:Name="SplitViewFrame" Navigated="SplitViewFrame_OnNavigated"
                           Padding="0 0 0 0" >
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <NavigationThemeTransition>
                                <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                    <DrillInNavigationTransitionInfo />
                                </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                            </NavigationThemeTransition>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>

            </SplitView.Content>
        </SplitView>

        <!-- Hamburger Button -->
        <Button x:Name="HamburgerButton"
                Width="40"
                Height="108"
                Background="Blue"
                Foreground="{StaticResource HamburgerForegroundBrush}"
                VerticalAlignment="Top"
                BorderThickness="0"
                
                Grid.Row="0"
                Grid.Column="0"
                Click="HamburgerButton_Click">
            <Path Data="{StaticResource HamburgerIcon}"
                  Fill="{StaticResource HamburgerForegroundBrush}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Height="24"
                  Width="24"
                  Stretch="Uniform" />
        </Button>

        <Pivot x:Name="MyPivot"
               Grid.Row="0"
               Grid.Column="1"
               EntranceNavigationTransitionInfo.IsTargetElement="True"
               RelativePanel.AlignBottomWithPanel="True"
               RelativePanel.AlignLeftWithPanel="True"
               RelativePanel.AlignRightWithPanel="True"              
               Background="Transparent"
               ItemsSource="{x:Bind Path=ViewModel.TopMenu}"           
               HeaderTemplate="{StaticResource TopItemTemplate}"
               ItemTemplate="{StaticResource ItemTemplate}"
               SelectionChanged="Menu_SelectionChanged"
               
               />



        <!-- Responsive Visual States -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>

                <!-- VisualState to be triggered when window width is >=1007 effective pixels -->
                <VisualState x:Name="Large">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1007" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- SplitView pane shows as overlay -->
                        <!-- Splitview pane will close however :-( -->
                        <Setter Target="MySplitView.DisplayMode"
                                Value="Inline" />
                        <Setter Target="MySplitView.IsPaneOpen"
                                Value="True" />
                    </VisualState.Setters>
                </VisualState>

                <!-- VisualState to be triggered when window width is >=640 and <=1007 effective pixels -->
                <VisualState x:Name="Medium">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MySplitView.DisplayMode"
                                Value="CompactOverlay" />
                        <Setter Target="MySplitView.IsPaneOpen"
                                Value="False" />
                    </VisualState.Setters>
                </VisualState>

                <!-- VisualState to be triggered when window width is >=0 and <641 effective pixels -->
                <VisualState x:Name="Small">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!-- Collapse the SplitView pane into overlay mode -->
                        <Setter Target="MySplitView.DisplayMode"
                                Value="Overlay" />
                        <Setter Target="MySplitView.IsPaneOpen"
                                Value="False" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
